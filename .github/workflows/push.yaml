name: Push Action

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  node_version: '18.x'
  app_name: 'ui'

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.node_version }}-build-${{ hashFiles('package.json') }}

      - name: Install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Format
        run: npm run format

      - name: Build
        run: npm run build

      - name: Unit Tests
        run: npm run test

      - name: 'Coverage Test'
        run: npx vitest --coverage

      - name: 'Report Coverage'
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2

      - name: Upload Artifacts for Publishing
        uses: actions/upload-artifact@v3
        with:
          name: dist-folders
          path: packages/**/dist

      - name: Storybook Tests
        run: npm run storybook:test

      - name: Storybook Build
        run: npm run storybook:build

      - name: Upload Storybook Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybooks
          path: packages/**/storybook-static

  publish-packages:
    name: Publish NPM Package
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.node_version }}-build-${{ hashFiles('package.json') }}

      - name: Download Artifacts from Build Job
        uses: actions/download-artifact@v3
        with:
          name: dist-folders
          path: packages/

      - name: Install
        run: npm ci

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          registry-url: https://registry.npmjs.org/

      - uses: fregante/setup-git-user@v2
        name: Setup Git User

      - run: npx lerna version --conventional-commits --conventional-graduate --yes
        name: Version Packages

      - run: lerna publish --from-git --yes --create-release github --summary-file
        name: Publish Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PUBLISHED_PACKAGES Artifact
        uses: actions/upload-artifact@v3
        with:
          name: published_packages
          path: ./lerna-publish-summary.json

  publish-storybook:
    name: Publish Storybooks
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifact from Build Job
        uses: actions/download-artifact@v3
        with:
          name: storybooks
          path: packages/

      - name: Upload to Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob delete-batch \
              --sas-token ${{ secrets.AZURE_STORAGE_CREDENTIALS }} \
              --account-name ${{ vars.AZURE_STORAGE_ACCOUNT }} \
              --source ${{ vars.BUNDLES_CONTAINER_NAME}} \
              --pattern "bundles/${{ env.app_name }}/main/*"
            az storage blob upload-batch \
              --sas-token ${{ secrets.AZURE_STORAGE_CREDENTIALS }} \
              --account-name ${{ vars.AZURE_STORAGE_ACCOUNT }} \
              --auth-mode key -d ${{ vars.BUNDLES_CONTAINER_NAME}} \
              --destination-path "bundles/${{ env.app_name }}/main" \
              -s ./packages \
              --pattern **/storybook-static/*
            az storage blob upload \
              --sas-token ${{ secrets.AZURE_STORAGE_CREDENTIALS }} \
              --account-name ${{ vars.AZURE_STORAGE_ACCOUNT }} \
              --auth-mode key \
              --container-name ${{ vars.BUNDLES_CONTAINER_NAME}} \
              --overwrite \
              -f index.html \
              --name "bundles/${{ env.app_name }}/main/index.html"
