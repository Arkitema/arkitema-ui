import type { Meta, StoryObj } from '@storybook/react'
import { FileInput } from '.'

const meta: Meta<typeof FileInput> = {
  title: 'FileInput',
  component: FileInput,
  argTypes: {
    setData: { action: 'setData' },
    setFileName: { action: 'setFileName' },
  },
}

export default meta

type Story = StoryObj<typeof FileInput>

export const Clear: Story = {
  args: {
    text: 'Select Image',
    data: '',
    allowedExtensions: ['.jpg', '.jpeg', '.png'],
    fileType: 'image',
  },
}

export const Loading: Story = {
  args: {
    text: 'Upload Image',
    data: '',
    loading: true,
    allowedExtensions: ['.jpg', '.jpeg', '.png'],
    fileType: 'image',
  },
}

export const UploadedImage: Story = {
  args: {
    text: 'Upload Image',
    data: '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',
    allowedExtensions: ['.jpg', '.jpeg', '.png'],
    fileName: 'test.png',
    fileType: 'image',
  },
}

export const UploadedJSON: Story = {
  args: {
    text: 'Upload JSON',
    data: 'iVBORw0KGg',
    allowedExtensions: ['.json'],
    fileName: 'test.json',
    fileType: 'json',
  },
}

export const Error: Story = {
  args: {
    text: 'Upload Image',
    data: '',
    allowedExtensions: ['.jpg', '.jpeg', '.png'],
    fileType: 'image',
  },
}
